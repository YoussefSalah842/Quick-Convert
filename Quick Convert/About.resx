<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>